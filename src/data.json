[
  {
    "name": "Set up credentials (globally)",
    "content": "git config (--global) user.[name|email] '[NAME|EMAIL]'",
    "section": "Set up",
    "isEndOfSubsection": false
  },
  {
    "name": "Create local repo",
    "content": "git init NAME",
    "section": "Set up",
    "isEndOfSubsection": false
  },
  {
    "name": "Download online repo",
    "content": "git clone URL",
    "section": "Set up",
    "isEndOfSubsection": false
  },
  {
    "name": "Show remotes",
    "content": "git remote -v",
    "section": "Remotes",
    "isEndOfSubsection": false
  },
  {
    "name": "Add remote",
    "content": "git remote add REMOTE URL",
    "section": "Remotes",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete remote",
    "content": "git remote remove REMOTE",
    "section": "Remotes",
    "isEndOfSubsection": false
  },
  {
    "name": "Fetch history from (all) remotes",
    "content": "git fetch (--all)",
    "section": "Pull and push",
    "isEndOfSubsection": false
  },
  {
    "name": "Pull changes from remote",
    "content": "git pull REMOTE BRANCH",
    "section": "Pull and push",
    "isEndOfSubsection": false
  },
  {
    "name": "(Force) push to remote (with tags)",
    "content": "git push (-f) (--follow-tags) REMOTE BRANCH",
    "section": "Pull and push",
    "isEndOfSubsection": false
  },
  {
    "name": "Push just tags to remote",
    "content": "git push REMOTE --tags",
    "section": "Pull and push",
    "isEndOfSubsection": false
  },
  {
    "name": "Show changed files",
    "content": "git status",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Show (staged) file differences",
    "content": "git diff (--staged) FILE",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Show ignored files",
    "content": "git ls-files -o -i --exclude-standard",
    "section": "Changes",
    "isEndOfSubsection": true
  },
  {
    "name": "Stage file",
    "content": "git add FILE",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Unstage file",
    "content": "git reset FILE",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete unstaged changes",
    "content": "git checkout .",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Rename file",
    "content": "git mv OLD_NAME NEW_NAME",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete file",
    "content": "git rm FILE",
    "section": "Changes",
    "isEndOfSubsection": true
  },
  {
    "name": "Stash changes",
    "content": "git stash",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "List sets of stashed changes",
    "content": "git stash list",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Restore last stashed changes",
    "content": "git stash pop",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete last stashed changes",
    "content": "git stash drop",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Show commit history",
    "content": "git log (--oneline)",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Show commit details",
    "content": "git show HASH",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Show tags",
    "content": "git tag",
    "section": "Commits",
    "isEndOfSubsection": true
  },
  {
    "name": "Commit changes",
    "content": "git commit (-m 'MESSAGE')",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Modify last commit",
    "content": "git commit --amend (-m 'MESSAGE')",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete commit (and changes)",
    "content": "git reset (--hard) HASH",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Refer to previous commit",
    "content": "HEAD~1",
    "section": "Commits",
    "isEndOfSubsection": true
  },
  {
    "name": "Tag commit",
    "content": "git tag -a TAG (-m 'MESSAGE') (HASH)",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete tag locally",
    "content": "git tag -d TAG",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete tag from remote",
    "content": "git push REMOTE :TAG",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Show local (and remote) branches",
    "content": "git branch (--all)",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Show branch differences",
    "content": "git diff BRANCH1 BRANCH2",
    "section": "Branches",
    "isEndOfSubsection": true,
    "isEndOfSubsection": false
  },
  {
    "name": "Create branch",
    "content": "git branch BRANCH",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Switch to branch",
    "content": "git checkout BRANCH",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Rename branch",
    "content": "git branch -m OLD_NAME NEW_NAME",
    "section": "Branches",
    "isEndOfSubsection": true
  },
  {
    "name": "Merge branch",
    "content": "git merge BRANCH_TO_BE_MERGED TARGET_BRANCH",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Rebase branch (interactively)",
    "content": "git rebase (-i) (BRANCH) (HASH)",
    "section": "Branches",
    "isEndOfSubsection": true
  },
  {
    "name": "Delete branch locally",
    "content": "git branch -d BRANCH",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete branch from remote",
    "content": "git push REMOTE :BRANCH",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete branches not in remote",
    "content": "git remote prune REMOTE",
    "section": "Branches",
    "isEndOfSubsection": false
  }
]
