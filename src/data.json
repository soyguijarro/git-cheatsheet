[
  {
    "name": "Set up credentials [globally]",
    "content": "git config [--global] user.[name | email] [<name> | <email>]",
    "section": "Set up",
    "isEndOfSubsection": false
  },
  {
    "name": "Create local repository [in new directory]",
    "content": "git init [<name>]",
    "section": "Set up",
    "isEndOfSubsection": false
  },
  {
    "name": "Download online repository",
    "content": "git clone <url>",
    "section": "Set up",
    "isEndOfSubsection": false
  },
  {
    "name": "Show remotes",
    "content": "git remote -v",
    "section": "Remotes",
    "isEndOfSubsection": false
  },
  {
    "name": "Add remote",
    "content": "git remote add <remote> <url>",
    "section": "Remotes",
    "isEndOfSubsection": false
  },
  {
    "name": "Change remote's URL",
    "content": "git remote set-url <remote> <url>",
    "section": "Remotes",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete remote",
    "content": "git remote remove <remote>",
    "section": "Remotes",
    "isEndOfSubsection": false
  },
  {
    "name": "Fetch history from [all] remotes",
    "content": "git fetch [--all]",
    "section": "Pull and push",
    "isEndOfSubsection": false
  },
  {
    "name": "Pull changes from remote",
    "content": "git pull <remote> <branch>",
    "section": "Pull and push",
    "isEndOfSubsection": false
  },
  {
    "name": "[Force] push to remote [with tags]",
    "content": "git push [-f] [--follow-tags] <remote> <branch>",
    "section": "Pull and push",
    "isEndOfSubsection": false
  },
  {
    "name": "Push just tags to remote",
    "content": "git push <remote> --tags",
    "section": "Pull and push",
    "isEndOfSubsection": false
  },
  {
    "name": "Show changed files",
    "content": "git status",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Show [staged] file differences",
    "content": "git diff [--staged] <file>",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Show ignored files",
    "content": "git ls-files -o -i --exclude-standard",
    "section": "Changes",
    "isEndOfSubsection": true
  },
  {
    "name": "Stage file",
    "content": "git add <file>",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Unstage file",
    "content": "git reset <file>",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete unstaged changes",
    "content": "git checkout .",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Rename file",
    "content": "git mv <old name> <new name>",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete file",
    "content": "git rm <file>",
    "section": "Changes",
    "isEndOfSubsection": true
  },
  {
    "name": "Stash changes",
    "content": "git stash",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "List sets of stashed changes",
    "content": "git stash list",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Restore last stashed changes",
    "content": "git stash pop",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete last stashed changes",
    "content": "git stash drop",
    "section": "Changes",
    "isEndOfSubsection": false
  },
  {
    "name": "Show commit [and branch] history",
    "content": "git log [--graph] [--oneline]",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Show commit details",
    "content": "git show <hash>",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Show tags",
    "content": "git tag",
    "section": "Commits",
    "isEndOfSubsection": true
  },
  {
    "name": "Commit changes",
    "content": "git commit [-m <message>]",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Modify last commit",
    "content": "git commit --amend [-m <message>]",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Go to commit [and discard changes]",
    "content": "git reset [--hard] <hash>",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Refer to nth previous commit",
    "content": "HEAD~<n>",
    "section": "Commits",
    "isEndOfSubsection": true
  },
  {
    "name": "Tag commit",
    "content": "git tag -a <tag> [-m <message>] [<hash>]",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete tag locally",
    "content": "git tag -d <tag>",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete tag from remote",
    "content": "git push <remote> :<tag>",
    "section": "Commits",
    "isEndOfSubsection": false
  },
  {
    "name": "Show local [and remote] branches",
    "content": "git branch [--all]",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Show branch differences",
    "content": "git diff <some branch> <other branch>",
    "section": "Branches",
    "isEndOfSubsection": true
  },
  {
    "name": "Create branch",
    "content": "git branch <branch>",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Switch to branch",
    "content": "git checkout <branch>",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Rename branch",
    "content": "git branch -m <old name> <new name>",
    "section": "Branches",
    "isEndOfSubsection": true
  },
  {
    "name": "Merge branch",
    "content": "git merge <branch to be merged> <target branch>",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Rebase branch [interactively]",
    "content": "git rebase [-i] [<branch>] [<hash>]",
    "section": "Branches",
    "isEndOfSubsection": true
  },
  {
    "name": "[Delete merged | Force delete] branch locally",
    "content": "git branch [-d | -D] <branch>",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete branch from remote",
    "content": "git push <remote> :<branch>",
    "section": "Branches",
    "isEndOfSubsection": false
  },
  {
    "name": "Delete branches not in remote",
    "content": "git remote prune <remote>",
    "section": "Branches",
    "isEndOfSubsection": true
  }
]
